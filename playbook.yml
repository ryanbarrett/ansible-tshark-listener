---
- hosts: all
  remote_user: "{{ user_name }}"
  become: yes
  vars_files:
    - vars/main.yml

  roles:
  - geerlingguy.ntp

  tasks:
  - name: install packages
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    with_items:
    - tshark
  - name: Create work directory for tshark buffer files.
    ansible.builtin.file:
      path: "{{ tshark_buffer_dir }}"
      owner: "{{ user_name }}"
      group: "{{ user_name }}"
      mode: '0770'
      state: directory
  - name: install rc.local template to start capture on reboot
    ansible.builtin.template:
      src: ./templates/rc.local.j2
      dest: /etc/rc.local
      mode: '0755'
      owner: root 
      group: root
 # https://packetlife.net/blog/2010/mar/19/sniffing-wireshark-non-root-user/
  - name: create group tshark for dumpcap access
    ansible.builtin.group:
      name: tshark
      state: present
  - name: add user to tshark group
    ansible.builtin.user:
      name: "{{ user_name }}"
      append: yes
      groups: tshark
  - name: set group for dumpcap
    ansible.builtin.file:
      path: /usr/bin/dumpcap
      mode: '0750'
      group: tshark
  - name: set capabilities of dumpcap
    ansible.builtin.command:
      cmd: setcap cap_net_raw,cap_net_admin=eip /usr/bin/dumpcap
  # Unable to get this to work.
  # - name: set capabilities of dumpcap
  #   capabilities:
  #     path: /usr/bin/dumpcap
  #     capability: "{{ item }}"
  #     state: present
  #   with_items:
  #   - cap_net_raw+eip
  #   - cap_net_admin+eip
  - name: launch tmux session ~ tmux attach-session
    ansible.builtin.cron:
      name: launch tmux session for user
      user: "{{ user_name }}"
      special_time: reboot
      job: tmux new-session -d -s tshark && tmux set-option -t tshark remain-on-exit on && tmux new-window -d -n 'tsharkCapture' -t tshark:1 'tshark -i {{ listener_int }} -b interval:{{ tshark_interval }} -b files:{{ tshark_files }} -w {{ tshark_buffer_dir }}/trace.pcap'

  # - name: launch tshark tab
  #   ansible.builtin.cron:
  #     name: launch tshark tab
  #     user: "{{ user_name }}"
  #     special_time: reboot
  #     job: tmux new-window -d -n 'tsharkCapture' -t tshark:1 'tshark -i {{ listener_int }} -b interval:{{ tshark_interval }} -b files:{{ tshark_files }} -w {{ tshark_buffer_dir }}/trace.pcap'


